/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { MyERC721, MyERC721Interface } from "../../contracts/MyERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "purchase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "salePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405266038d7ea4c680006008553480156200001c57600080fd5b5060408051808201825260088152674d7945524337323160c01b6020808301918252835180850190945260048452634d45524360e01b9084015281519192916200006991600091620000f8565b5080516200007f906001906020840190620000f8565b5050506200009c62000096620000a260201b60201c565b620000a6565b620001da565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000106906200019e565b90600052602060002090601f0160209004810192826200012a576000855562000175565b82601f106200014557805160ff191683800117855562000175565b8280016001018555821562000175579182015b828111156200017557825182559160200191906001019062000158565b506200018392915062000187565b5090565b5b8082111562000183576000815560010162000188565b600181811c90821680620001b357607f821691505b602082108103620001d457634e487b7160e01b600052602260045260246000fd5b50919050565b61204e80620001ea6000396000f3fe6080604052600436106101295760003560e01c80638da5cb5b116100a5578063c87b56dd11610074578063efef39a111610059578063efef39a114610385578063f2fde38b14610398578063f51f96dd146103b857600080fd5b8063c87b56dd1461030f578063e985e9c51461032f57600080fd5b80638da5cb5b1461028f57806395d89b41146102ba578063a22cb465146102cf578063b88d4fde146102ef57600080fd5b806323b872dd116100fc5780636352211e116100e15780636352211e1461022c57806370a082311461024c578063715018a61461027a57600080fd5b806323b872dd146101ec57806342842e0e1461020c57600080fd5b806301ffc9a71461012e57806306fdde0314610163578063081812fc14610185578063095ea7b3146101ca575b600080fd5b34801561013a57600080fd5b5061014e610149366004611b94565b6103ce565b60405190151581526020015b60405180910390f35b34801561016f57600080fd5b506101786104b3565b60405161015a9190611c27565b34801561019157600080fd5b506101a56101a0366004611c3a565b610545565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015a565b3480156101d657600080fd5b506101ea6101e5366004611c7c565b610579565b005b3480156101f857600080fd5b506101ea610207366004611ca6565b61070a565b34801561021857600080fd5b506101ea610227366004611ca6565b6107ab565b34801561023857600080fd5b506101a5610247366004611c3a565b6107c6565b34801561025857600080fd5b5061026c610267366004611ce2565b610852565b60405190815260200161015a565b34801561028657600080fd5b506101ea610920565b34801561029b57600080fd5b5060065473ffffffffffffffffffffffffffffffffffffffff166101a5565b3480156102c657600080fd5b50610178610934565b3480156102db57600080fd5b506101ea6102ea366004611cfd565b610943565b3480156102fb57600080fd5b506101ea61030a366004611d68565b610952565b34801561031b57600080fd5b5061017861032a366004611c3a565b6109fa565b34801561033b57600080fd5b5061014e61034a366004611e62565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b61026c610393366004611c3a565b610a93565b3480156103a457600080fd5b506101ea6103b3366004611ce2565b610b95565b3480156103c457600080fd5b5061026c60085481565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061046157507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806104ad57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600080546104c290611e95565b80601f01602080910402602001604051908101604052809291908181526020018280546104ee90611e95565b801561053b5780601f106105105761010080835404028352916020019161053b565b820191906000526020600020905b81548152906001019060200180831161051e57829003601f168201915b5050505050905090565b600061055082610c4c565b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610584826107c6565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8216148061066f575061066f813361034a565b6106fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161063d565b6107058383610cd7565b505050565b6107143382610d77565b6107a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f76656400000000000000000000000000000000000000606482015260840161063d565b610705838383610e37565b61070583838360405180602001604052806000815250610952565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806104ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161063d565b600073ffffffffffffffffffffffffffffffffffffffff82166108f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161063d565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b61092861113f565b61093260006111c0565b565b6060600180546104c290611e95565b61094e338383611237565b5050565b61095c3383610d77565b6109e8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f76656400000000000000000000000000000000000000606482015260840161063d565b6109f484848484611364565b50505050565b6060610a0582610c4c565b6000610a4160408051808201909152601d81527f68747470733a2f2f6875696c6f2e6875696c6f2e72752f696d61676573000000602082015290565b90506000815111610a615760405180602001604052806000815250610a8c565b80610a6b84611407565b604051602001610a7c929190611ee8565b6040516020818303038152906040525b9392505050565b600081600854610aa39190611f46565b341015610b0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f48554920746562652061206e65204d494e540000000000000000000000000000604482015260640161063d565b81600114610b76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f534c4953484b4f4d204d4e4f474f204e465420584f4348455348000000000000604482015260640161063d565b610b7f336114c5565b600082610b8b60075490565b610a8c9190611f83565b610b9d61113f565b73ffffffffffffffffffffffffffffffffffffffff8116610c40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161063d565b610c49816111c0565b50565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16610c49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161063d565b600081815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84169081179091558190610d31826107c6565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d83836107c6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610df1575073ffffffffffffffffffffffffffffffffffffffff80821660009081526005602090815260408083209388168352929052205460ff165b80610e2f57508373ffffffffffffffffffffffffffffffffffffffff16610e1784610545565b73ffffffffffffffffffffffffffffffffffffffff16145b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610e57826107c6565b73ffffffffffffffffffffffffffffffffffffffff1614610efa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161063d565b73ffffffffffffffffffffffffffffffffffffffff8216610f9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161063d565b610fa983838360016114ea565b8273ffffffffffffffffffffffffffffffffffffffff16610fc9826107c6565b73ffffffffffffffffffffffffffffffffffffffff161461106c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161063d565b600081815260046020908152604080832080547fffffffffffffffffffffffff000000000000000000000000000000000000000090811690915573ffffffffffffffffffffffffffffffffffffffff8781168086526003855283862080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60065473ffffffffffffffffffffffffffffffffffffffff163314610932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161063d565b6006805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036112cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161063d565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61136f848484610e37565b61137b848484846115a6565b6109f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161063d565b6060600061141483611799565b600101905060008167ffffffffffffffff81111561143457611434611d39565b6040519080825280601f01601f19166020018201604052801561145e576020820181803683370190505b5090508181016020015b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461146857509392505050565b60006114d060075490565b90506114e0600780546001019055565b61094e828261187b565b60018111156109f45773ffffffffffffffffffffffffffffffffffffffff84161561154a5773ffffffffffffffffffffffffffffffffffffffff841660009081526003602052604081208054839290611544908490611f83565b90915550505b73ffffffffffffffffffffffffffffffffffffffff8316156109f45773ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805483929061159b908490611f9a565b909155505050505050565b600073ffffffffffffffffffffffffffffffffffffffff84163b1561178e576040517f150b7a0200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063150b7a029061161d903390899088908890600401611fb2565b6020604051808303816000875af1925050508015611676575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820190925261167391810190611ffb565b60015b611743573d8080156116a4576040519150601f19603f3d011682016040523d82523d6000602084013e6116a9565b606091505b50805160000361173b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161063d565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610e2f565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106117e2577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061180e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061182c57662386f26fc10000830492506010015b6305f5e1008310611844576305f5e100830492506008015b612710831061185857612710830492506004015b6064831061186a576064830492506002015b600a83106104ad5760010192915050565b61094e82826040518060200160405280600081525061189a8383611933565b6118a760008484846115a6565b610705576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161063d565b73ffffffffffffffffffffffffffffffffffffffff82166119b0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161063d565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615611a3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161063d565b611a4a6000838360016114ea565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615611ad6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161063d565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610c4957600080fd5b600060208284031215611ba657600080fd5b8135610a8c81611b66565b60005b83811015611bcc578181015183820152602001611bb4565b838111156109f45750506000910152565b60008151808452611bf5816020860160208601611bb1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610a8c6020830184611bdd565b600060208284031215611c4c57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c7757600080fd5b919050565b60008060408385031215611c8f57600080fd5b611c9883611c53565b946020939093013593505050565b600080600060608486031215611cbb57600080fd5b611cc484611c53565b9250611cd260208501611c53565b9150604084013590509250925092565b600060208284031215611cf457600080fd5b610a8c82611c53565b60008060408385031215611d1057600080fd5b611d1983611c53565b915060208301358015158114611d2e57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060008060808587031215611d7e57600080fd5b611d8785611c53565b9350611d9560208601611c53565b925060408501359150606085013567ffffffffffffffff80821115611db957600080fd5b818701915087601f830112611dcd57600080fd5b813581811115611ddf57611ddf611d39565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715611e2557611e25611d39565b816040528281528a6020848701011115611e3e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611e7557600080fd5b611e7e83611c53565b9150611e8c60208401611c53565b90509250929050565b600181811c90821680611ea957607f821691505b602082108103611ee2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008351611efa818460208801611bb1565b835190830190611f0e818360208801611bb1565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611f7e57611f7e611f17565b500290565b600082821015611f9557611f95611f17565b500390565b60008219821115611fad57611fad611f17565b500190565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152611ff16080830184611bdd565b9695505050505050565b60006020828403121561200d57600080fd5b8151610a8c81611b6656fea2646970667358221220266674f04b1f1e887ee677759cc219f136daeb6a6f2013a09098eb86166105ef64736f6c634300080e0033";

type MyERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyERC721__factory extends ContractFactory {
  constructor(...args: MyERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyERC721> {
    return super.deploy(overrides || {}) as Promise<MyERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MyERC721 {
    return super.attach(address) as MyERC721;
  }
  override connect(signer: Signer): MyERC721__factory {
    return super.connect(signer) as MyERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyERC721Interface {
    return new utils.Interface(_abi) as MyERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyERC721 {
    return new Contract(address, _abi, signerOrProvider) as MyERC721;
  }
}
